{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login/login.component.css","webpack:///./src/app/login/login/login.component.html","webpack:///./src/app/login/login/login.component.ts","webpack:///./src/app/login/register/register/register.component.css","webpack:///./src/app/login/register/register/register.component.html","webpack:///./src/app/login/register/register/register.component.ts","webpack:///./src/app/on-board/confirmation-dialog/confirmation-dialog.component.html","webpack:///./src/app/on-board/confirmation-dialog/confirmation-dialog.component.ts","webpack:///./src/app/on-board/material.module.ts","webpack:///./src/app/on-board/on-boarding-app.module.ts","webpack:///./src/app/on-board/on-boarding-form/on-boarding-form.component.css","webpack:///./src/app/on-board/on-boarding-form/on-boarding-form.component.html","webpack:///./src/app/on-board/on-boarding-form/on-boarding-form.component.ts","webpack:///./src/app/on-board/on-boarding-header/on-boarding-header.component.css","webpack:///./src/app/on-board/on-boarding-header/on-boarding-header.component.html","webpack:///./src/app/on-board/on-boarding-header/on-boarding-header.component.ts","webpack:///./src/app/on-board/on-boarding/on-boarding.component.css","webpack:///./src/app/on-board/on-boarding/on-boarding.component.html","webpack:///./src/app/on-board/on-boarding/on-boarding.component.ts","webpack:///./src/app/on-board/student-detail/student-detail.component.css","webpack:///./src/app/on-board/student-detail/student-detail.component.html","webpack:///./src/app/on-board/student-detail/student-detail.component.ts","webpack:///./src/app/on-board/student-list/student-list.component.css","webpack:///./src/app/on-board/student-list/student-list.component.html","webpack:///./src/app/on-board/student-list/student-list.component.ts","webpack:///./src/app/shared/auth.guard.ts","webpack:///./src/app/shared/auth.service.ts","webpack:///./src/app/shared/data.ts","webpack:///./src/app/shared/filter.pipe.ts","webpack:///./src/app/shared/student.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OnboardingComponent } from './on-board/on-boarding/on-boarding.component';\nimport { LoginComponent } from './login/login/login.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { StudentsListComponent } from './on-board/student-list/student-list.component';\nimport { OnboardingFormComponent } from './on-board/on-boarding-form/on-boarding-form.component';\nimport { RegisterComponent } from './login/register/register/register.component';\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\n  { path: 'login', component: LoginComponent },\n  {path: 'register',component: RegisterComponent},\n  {\n    path: 'onBoard', component: OnboardingComponent,\n    children: [                          //<---- child components declared here\n      {\n        path: 'form',\n        component: OnboardingFormComponent\n      },\n\n      {\n        path: 'studentlist',\n        component: StudentsListComponent\n      }],\n    canActivate: [AuthGuard]\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'students-onboarding-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { InMemoryWebApiModule} from 'angular-in-memory-web-api';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport {OnboardingAppModule} from './on-board/on-boarding-app.module';\n\nimport { AppComponent } from './app.component';\nimport {Data} from './shared/data';\n//import { LoginComponent } from './login/login/login.component';\nimport {LoginModule} from './login/login.module';\n@NgModule({\n  declarations: [\n    AppComponent,\n  //  LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    OnboardingAppModule,\n    LoginModule,\n    InMemoryWebApiModule.forRoot(Data)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../on-board/material.module';\nimport {LoginComponent} from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register/register.component';\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ],\n  exports:[LoginComponent]\n})\nexport class LoginModule { }\n","module.exports = \"\\r\\n.fill-remaining-space{\\r\\n    text-align: center;\\r\\n}\\r\\n.error{\\r\\n    color:red;\\r\\n}\\r\\n.form-body{\\r\\n    margin: 0 auto;\\r\\n    width: 500px;\\r\\n    }\\r\\n.form-full-width .form-element{\\r\\n        width:500px;\\r\\n    }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFNBQVM7QUFDYjtBQUNBO0lBQ0ksY0FBYztJQUNkLFlBQVk7SUFDWjtBQUVBO1FBQ0ksV0FBVztJQUNmIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZmlsbC1yZW1haW5pbmctc3BhY2V7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmVycm9ye1xyXG4gICAgY29sb3I6cmVkO1xyXG59XHJcbi5mb3JtLWJvZHl7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmZvcm0tZnVsbC13aWR0aCAuZm9ybS1lbGVtZW50e1xyXG4gICAgICAgIHdpZHRoOjUwMHB4O1xyXG4gICAgfSJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span class=\\\"fill-remaining-space\\\">Login</span>\\n</mat-toolbar>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit(loginForm.value)\\\" class=\\\"form form-full-width\\\">\\n\\n  <div class=\\\"form-body\\\">\\n    <div *ngIf=\\\"invalidCredentials\\\" class=\\\"error-msg\\\">\\n      <p class=\\\"error\\\">Invalid Credentials</p>\\n    </div>\\n    <mat-form-field class=\\\"form-element\\\">\\n      <input name=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" />\\n    </mat-form-field>\\n    <div\\n      *ngIf=\\\"loginForm.controls['email'].errors && (loginForm.controls['email'].dirty && loginForm.controls['email'].touched )\\\"\\n      class=\\\"error-msg\\\">\\n      <span class=\\\"error\\\" [hidden]=\\\"!loginForm.controls['email'].errors.required\\\">Email is required.</span>\\n      <span class=\\\"error\\\" [hidden]=\\\"!loginForm.controls['email'].errors.email\\\">Email is invalid.</span>\\n    </div>\\n    <br />\\n    <mat-form-field class=\\\"form-element\\\">\\n      <input type=\\\"password\\\" name=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n    </mat-form-field>\\n    <div\\n      *ngIf=\\\"loginForm.controls['password'].errors && (loginForm.controls['password'].dirty && loginForm.controls['password'].touched )\\\"\\n      class=\\\"error-msg\\\">\\n      <span class=\\\"error\\\" [hidden]=\\\"!loginForm.controls['password'].errors.required\\\">Password is required.</span>\\n    </div>\\n\\n    <div class=\\\"form-element\\\">\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!loginForm.valid\\\">Login\\n      </button>\\n    </div>\\n    <br />\\n    <div class=\\\"form-element\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"navigateToRegister()\\\" class=\\\"button\\\">Register\\n      </button>\\n      <span>Not a member? Register here</span>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup\n  invalidCredentials: boolean = false;\n  constructor(private router: Router, private formBuilder: FormBuilder, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit(form): void {\n\n    this.authService.checkCredentials(this.loginForm.value).subscribe(value => {\n      if (value != null && value.length > 0) {\n        this.authService.login();\n        this.router.navigateByUrl('/onBoard');\n      }\n      else {\n        console.log(\"invalid\");\n        this.invalidCredentials = true;\n      }\n    });\n\n  }\n  navigateToRegister(){\n    this.router.navigateByUrl('/register');\n  }\n}\n","module.exports = \"\\r\\n.fill-remaining-space{\\r\\n    text-align: center;\\r\\n}\\r\\n.error{\\r\\n    color:red;\\r\\n}\\r\\n.form-body{\\r\\n    margin: 0 auto;\\r\\n    width: 500px;\\r\\n    }\\r\\n.form-full-width .form-element{\\r\\n        width:500px;\\r\\n    }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vcmVnaXN0ZXIvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFNBQVM7QUFDYjtBQUNBO0lBQ0ksY0FBYztJQUNkLFlBQVk7SUFDWjtBQUVBO1FBQ0ksV0FBVztJQUNmIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vcmVnaXN0ZXIvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZmlsbC1yZW1haW5pbmctc3BhY2V7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmVycm9ye1xyXG4gICAgY29sb3I6cmVkO1xyXG59XHJcbi5mb3JtLWJvZHl7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmZvcm0tZnVsbC13aWR0aCAuZm9ybS1lbGVtZW50e1xyXG4gICAgICAgIHdpZHRoOjUwMHB4O1xyXG4gICAgfSJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span class=\\\"fill-remaining-space\\\">Register</span>\\n</mat-toolbar>\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit(registerForm.value)\\\" class=\\\"form form-full-width\\\">\\n \\n  <div class=\\\"form-body\\\">\\n      <div *ngIf=\\\"invalidCredentials\\\" class=\\\"error-msg\\\">\\n          <p class=\\\"error\\\" >Invalid Credentials</p>\\n        </div>\\n    <mat-form-field class=\\\"form-element\\\">\\n      <input name=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\"  />\\n    </mat-form-field>\\n    <div *ngIf=\\\"registerForm.controls['email'].errors && (registerForm.controls['email'].dirty && registerForm.controls['email'].touched )\\\" class=\\\"error-msg\\\">\\n      <span class=\\\"error\\\" [hidden]=\\\"!registerForm.controls['email'].errors.required\\\">Email is required.</span>\\n      <span class=\\\"error\\\" [hidden]=\\\"!registerForm.controls['email'].errors.email\\\">Email is invalid.</span> \\n    </div>\\n    <br />\\n    <mat-form-field class=\\\"form-element\\\">\\n      <input type=\\\"password\\\" name=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n    </mat-form-field> \\n    <div *ngIf=\\\"registerForm.controls['password'].errors && (registerForm.controls['password'].dirty && registerForm.controls['password'].touched )\\\" class=\\\"error-msg\\\">\\n      <span class=\\\"error\\\" [hidden]=\\\"!registerForm.controls['password'].errors.required\\\">Password is required.</span>\\n    </div>\\n\\n  <div class=\\\"form-element\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!registerForm.valid\\\">Register\\n    </button>\\n  </div>\\n</div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup\n  constructor(private router: Router, private formBuilder: FormBuilder, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit(form): void {\n\n    this.authService.registerUser(this.registerForm.value).subscribe(value => {\n    console.log(\"User registered\");\n    this.router.navigateByUrl('/login');\n    });\n\n}\n}\n","module.exports = \"\\r\\n<div mat-dialog-content>\\r\\n  <p>{{message}}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"agreed\\\" cdkFocusInitial>Yes</button>\\r\\n</div>\\r\\n\"","import {Component, Inject} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n@Component({\r\n    selector: 'confirmation-dialog.component.css',\r\n    templateUrl: 'confirmation-dialog.component.html',\r\n  })\r\n  export class ConfirmationDialog {\r\n  message:string;\r\n  agreed:boolean=true;\r\n    constructor(\r\n      public dialogRef: MatDialogRef<ConfirmationDialog>,\r\n      @Inject(MAT_DIALOG_DATA) data) {\r\n          this.message=data.message;\r\n      }\r\n  \r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n  \r\n  }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport{MatDialogTitle, MatDialogRef,MAT_DIALOG_DATA} from '@angular/material';\nimport { \n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [ \n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ]    ,\n  providers: [ { provide: MatDialogTitle, useValue: {} }, { provide: MatDialogRef, useValue: {} }, { provide: MAT_DIALOG_DATA, useValue: [] } ]\n})\n\nexport class MaterialModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { OnboardingComponent } from './on-boarding/on-boarding.component';\nimport { OnboardingFormComponent } from './on-boarding-form/on-boarding-form.component';\nimport { StudentsListComponent } from './student-list/student-list.component';\nimport { StudentDetailComponent } from './student-detail/student-detail.component';\nimport { OnboardingHeaderComponent } from './on-boarding-header/on-boarding-header.component';\nimport { MaterialModule } from './material.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FilterPipe } from '../shared/filter.pipe';\nimport {ConfirmationDialog} from '../on-board/confirmation-dialog/confirmation-dialog.component';\n@NgModule({\n  declarations: [ConfirmationDialog,OnboardingComponent, OnboardingFormComponent, StudentsListComponent, StudentDetailComponent, OnboardingHeaderComponent, FilterPipe],\n  exports: [OnboardingComponent],\n  imports: [\n    CommonModule,\n    NoopAnimationsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  entryComponents: [ConfirmationDialog]\n})\nexport class OnboardingAppModule { }\n","module.exports = \"\\r\\n.form-body{\\r\\nmargin: 0 auto;\\r\\nwidth: 500px;\\r\\n}\\r\\n\\r\\n.form-full-width .form-element{\\r\\n    width:500px;\\r\\n}\\r\\n\\r\\n.error{\\r\\n    color:red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb24tYm9hcmQvb24tYm9hcmRpbmctZm9ybS9vbi1ib2FyZGluZy1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0EsY0FBYztBQUNkLFlBQVk7QUFDWjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFDQTtJQUNJLFNBQVM7QUFDYiIsImZpbGUiOiJzcmMvYXBwL29uLWJvYXJkL29uLWJvYXJkaW5nLWZvcm0vb24tYm9hcmRpbmctZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5mb3JtLWJvZHl7XHJcbm1hcmdpbjogMCBhdXRvO1xyXG53aWR0aDogNTAwcHg7XHJcbn1cclxuXHJcbi5mb3JtLWZ1bGwtd2lkdGggLmZvcm0tZWxlbWVudHtcclxuICAgIHdpZHRoOjUwMHB4O1xyXG59XHJcbi5lcnJvcntcclxuICAgIGNvbG9yOnJlZDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"form-container\\\">\\n  <mat-toolbar color=\\\"primary\\\">\\n    <span class=\\\"fill-remaining-space\\\">On Boarding Form</span>\\n  </mat-toolbar>\\n  <div class=\\\"form-body\\\" novalidate>\\n    <form [formGroup]=\\\"onBoardForm\\\" (ngSubmit)=\\\"onSubmit(onBoardForm.value)\\\" class=\\\"form form-full-width\\\">\\n\\n      <div>\\n        <mat-form-field class=\\\"form-element\\\">\\n          <input name=\\\"studentName\\\" matInput placeholder=\\\"Student Name\\\" formControlName=\\\"studentName\\\">\\n        </mat-form-field>\\n        <div\\n          *ngIf=\\\"onBoardForm.controls['studentName'].errors && (onBoardForm.controls['studentName'].dirty && onBoardForm.controls['studentName'].touched )\\\"\\n          class=\\\"error-msg\\\">\\n          <span class=\\\"error\\\" [hidden]=\\\"!onBoardForm.controls['studentName'].errors.required\\\">Student Name is\\n            required.</span>\\n        </div>\\n        <br />\\n        <mat-form-field class=\\\"form-element\\\">\\n          <mat-label>Student category (required)</mat-label>\\n          <select #category (change)=\\\"onSelectingCategory(category.value)\\\" matNativeControl id=\\\"category\\\"\\n            formControlName=\\\"category\\\">\\n            <option *ngFor=\\\"let c of categories\\\" [value]=\\\"c\\\">{{ c }}</option>\\n          </select>\\n        </mat-form-field>\\n        <div\\n          *ngIf=\\\"onBoardForm.controls['category'].errors && (onBoardForm.controls['category'].dirty && onBoardForm.controls['category'].touched )\\\"\\n          class=\\\"error-msg\\\">\\n          <span class=\\\"error\\\" [hidden]=\\\"!onBoardForm.controls['category'].errors.required\\\">Student Name is\\n            required.</span>\\n        </div>\\n\\n        <br />\\n        <div formGroupName=\\\"documents\\\">\\n          <mat-label class=\\\"form-element\\\">Documents</mat-label>\\n\\n          <div class=\\\"form-element\\\">\\n            <mat-checkbox  matInput formControlName=\\\"domicile\\\" value=\\\"1\\\">Domicile</mat-checkbox>\\n          </div>\\n          <!-- <div\\n          *ngIf=\\\"onBoardForm.get('documents').errors &&  !onBoardForm.get('documents.domicile').pristine \\\"\\n          class=\\\"error-msg\\\">\\n          <span class=\\\"error\\\" >Domicile Certificate is\\n            required.</span>\\n        </div> -->\\n\\n          <div class=\\\"form-element\\\">\\n            <mat-checkbox formControlName=\\\"birthCertificate\\\" value=\\\"1\\\">Birth Certificate</mat-checkbox>\\n          </div>\\n\\n          <div class=\\\"form-element\\\">\\n            <mat-checkbox formControlName=\\\"markSheets\\\" value=\\\"1\\\">Mark Sheets</mat-checkbox>\\n          </div>\\n\\n          <div class=\\\"form-element\\\">\\n            <mat-checkbox formControlName=\\\"policeClearance\\\" value=\\\"1\\\">Police Clearance</mat-checkbox>\\n          </div>\\n\\n          <div class=\\\"form-element\\\">\\n            <mat-checkbox formControlName=\\\"passport\\\" value=\\\"1\\\">Passport</mat-checkbox>\\n          </div>\\n\\n          <div class=\\\"form-element\\\">\\n            <mat-checkbox formControlName=\\\"declaration\\\" value=\\\"1\\\" >Declaration</mat-checkbox>\\n          </div>\\n        </div>\\n\\n        <mat-form-field class=\\\"form-element\\\">\\n          <input matInput [matDatepicker]=\\\"myDatepicker\\\" placeholder=\\\"DOB(mm/dd/yyyy)\\\" formControlName=\\\"dob\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #myDatepicker></mat-datepicker>\\n        </mat-form-field>\\n        <div *ngIf=\\\"onBoardForm.controls['dob'].errors && (onBoardForm.controls['dob'].dirty )\\\" class=\\\"error-msg\\\">\\n          <span class=\\\"error\\\" [hidden]=\\\"!onBoardForm.controls['dob'].errors.required\\\">DOB is\\n            required.</span>\\n        </div>\\n        <br />\\n\\n        <mat-form-field class=\\\"form-element\\\">\\n          <input name=\\\"fatherName\\\" matInput placeholder=\\\"Father's Name\\\" formControlName=\\\"fatherName\\\">\\n        </mat-form-field>\\n        <div\\n          *ngIf=\\\"onBoardForm.controls['fatherName'].errors && (onBoardForm.controls['fatherName'].dirty && onBoardForm.controls['fatherName'].touched )\\\"\\n          class=\\\"error-msg\\\">\\n          <span class=\\\"error\\\" [hidden]=\\\"!onBoardForm.controls['fatherName'].errors.required\\\">Father's Name is\\n            required.</span>\\n        </div>\\n        <br />\\n\\n        <mat-form-field class=\\\"form-element\\\">\\n          <input name=\\\"motherName\\\" matInput placeholder=\\\"Mother's Name\\\" formControlName=\\\"motherName\\\">\\n        </mat-form-field>\\n\\n        <div\\n          *ngIf=\\\"onBoardForm.controls['motherName'].errors && (onBoardForm.controls['motherName'].dirty && onBoardForm.controls['motherName'].touched )\\\"\\n          class=\\\"error-msg\\\">\\n          <span class=\\\"error\\\" [hidden]=\\\"!onBoardForm.controls['motherName'].errors.required\\\">Mother's Name is\\n            required.</span>\\n        </div>\\n        <br />\\n        \\n        <mat-form-field class=\\\"form-element\\\">\\n          <input type=\\\"number\\\" name=\\\"lastClassScore\\\" matInput placeholder=\\\"Last class score\\\" formControlName=\\\"lastClassScore\\\">\\n        </mat-form-field>\\n        <div\\n          *ngIf=\\\"onBoardForm.controls['lastClassScore'].errors && (onBoardForm.controls['lastClassScore'].dirty && onBoardForm.controls['lastClassScore'].touched )\\\"\\n          class=\\\"error-msg\\\">\\n          <span class=\\\"error\\\" [hidden]=\\\"!onBoardForm.controls['lastClassScore'].errors.required\\\">Last class score is\\n            required.</span>\\n        </div>\\n        <div class=\\\"form-element\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"button\\\" [disabled]=\\\"!onBoardForm.valid\\\">On\\n            Board</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, NgForm, FormGroup } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { StudentService } from '../../shared/student.service';\nimport { IStudent } from '../../shared/student';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DISABLED } from '@angular/forms/src/model';\n@Component({\n  selector: 'app-on-boarding-form',\n  templateUrl: './on-boarding-form.component.html',\n  styleUrls: ['./on-boarding-form.component.css']\n})\nexport class OnboardingFormComponent implements OnInit {\n  checkModel;\n  onBoardForm: FormGroup;\n  student: IStudent = null;\n  students: IStudent[] = [];\n  isDisabled: boolean = false;\n  categories = ['Domestic', 'International'];\n  startDate = new Date(1990, 0, 1);\n  constructor(private fb: FormBuilder, private studentService: StudentService){\n   \n    this.studentService.getStudentDataForEdit().subscribe(value => {\n     if(value!=null){\n      this.student = value.student;\n      \n      this.isDisabled=value.disabled;\n     }\n    });\n\n  }\n\n  ngOnInit() {\n    console.log(\"On init\");\n    \n    console.log(this.student);\n    this.onBoardForm = this.fb.group({\n      id: [this.student != null ? this.student.id : 0],\n      studentName: [{ value: this.student != null ? this.student.studentName : '', disabled: this.isDisabled }, [Validators.required, Validators.maxLength(50)]],\n      category: [{ value: this.student != null ? this.student.category : 'Domestic', disabled: this.isDisabled }, [Validators.required]],\n      documents: this.fb.group({\n        domicile: [{ value: this.student != null ? this.student.documents.domicile : '', disabled: this.isDisabled }, [Validators.pattern('true')]],\n        birthCertificate: [{ value: this.student != null ? this.student.documents.birthCertificate : '', disabled: this.isDisabled }, [Validators.pattern('true')]],\n        markSheets: [{ value: this.student != null ? this.student.documents.birthCertificate : '', disabled: this.isDisabled }, [Validators.pattern('true')]],\n        policeClearance: [{ value: this.student != null ? this.student.documents.policeClearance : '', disabled: this.isDisabled }],\n        passport: [{ value: this.student != null ? this.student.documents.passport : '', disabled: this.isDisabled }],\n        declaration: [{ value: this.student != null ? this.student.documents.declaration : '', disabled: this.isDisabled }]\n      }),\n      dob: [{ value: this.student != null ? this.student.dob : '', disabled: this.isDisabled }, [Validators.required]],\n      fatherName: [{ value: this.student != null ? this.student.fatherName : '', disabled: this.isDisabled }, [Validators.required, Validators.maxLength(50)]],\n      motherName: [{ value: this.student != null ? this.student.motherName : '', disabled: this.isDisabled }, [Validators.required, Validators.maxLength(50)]],\n      lastClassScore: [{ value: this.student != null ? this.student.lastClassScore : '', disabled: this.isDisabled }, [Validators.required]],\n    });\n    if(this.student!=null)\n    this.onSelectingCategory(this.student.category);\n  }\n\n  onSubmit(form: NgForm) {\n    this.student = this.onBoardForm.value;\n    if (this.student.id != undefined) {\n      //edit\n\n      this.studentService.updateStudent(this.student).subscribe(value => {\n        this.studentService.sendStudentData();\n      });\n    }\n    else {\n      // insert\n      this.studentService.getNextIdForStudent().subscribe(value => {\n        this.student.id = value;\n      });\n      this.studentService.addStudent(this.student).subscribe(value => {\n        this.studentService.sendStudentData();\n      });\n    }\n  }\n\n  onSelectingCategory(category: string): void {\n    const policeClearanceControl = this.onBoardForm.get('documents.policeClearance');\n    const passportControl = this.onBoardForm.get('documents.passport');\n    const declarationControl = this.onBoardForm.get('documents.declaration');\n\n    if (category == \"International\") {\n      console.log(\"international\");\n      policeClearanceControl.setValidators(Validators.pattern('true'));\n      passportControl.setValidators(Validators.pattern('true'));\n      declarationControl.setValidators(Validators.pattern('true'));\n    }\n    else {\n      policeClearanceControl.clearValidators();\n      passportControl.clearValidators();\n      declarationControl.clearValidators();\n    }\n    policeClearanceControl.updateValueAndValidity();\n    passportControl.updateValueAndValidity();\n    declarationControl.updateValueAndValidity();\n  }\n\n  getStudent(id: number): void {\n    console.log(id);\n    this.studentService.getStudent(id).subscribe(value => {\n      this.student = value;\n      console.log(this.student);\n    });\n  }\n\n\n  getStudents(): void {\n\n    this.studentService.getStudents().subscribe(value => {\n      console.log(value);\n      this.students = value;\n      console.log(this.students);\n    });\n  }\n\n}\n","module.exports = \".logout-button{\\r\\n    float: right;\\r\\n    }\\r\\n    .mat-tab-group{\\r\\n    clear: right;\\r\\n    }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb24tYm9hcmQvb24tYm9hcmRpbmctaGVhZGVyL29uLWJvYXJkaW5nLWhlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaO0lBQ0E7SUFDQSxZQUFZO0lBQ1oiLCJmaWxlIjoic3JjL2FwcC9vbi1ib2FyZC9vbi1ib2FyZGluZy1oZWFkZXIvb24tYm9hcmRpbmctaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9nb3V0LWJ1dHRvbntcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIH1cclxuICAgIC5tYXQtdGFiLWdyb3Vwe1xyXG4gICAgY2xlYXI6IHJpZ2h0O1xyXG4gICAgfSJdfQ== */\"","module.exports = \"<button class=\\\"logout-button\\\" mat-raised-button color=\\\"accent\\\" (click)='logout()'>Logout</button>\\r\\n<!-- <mat-tab-group>\\r\\n\\r\\n    <mat-tab label=\\\"On Boarding Form\\\"> <app-on-boarding-form></app-on-boarding-form></mat-tab>\\r\\n    <mat-tab label=\\\"Student List\\\"> <app-student-list></app-student-list> </mat-tab>\\r\\n \\r\\n</mat-tab-group> -->\\r\\n\\r\\n<nav mat-tab-nav-bar mat-align-tabs=\\\"center\\\" >\\r\\n    <a mat-tab-link  [routerLink]=\\\"['form']\\\" routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n    [active]=\\\"rla.isActive\\\" >\\r\\n    \\r\\n     On Boarding Form\\r\\n    </a>\\r\\n    <a mat-tab-link  [routerLink]=\\\"['studentlist']\\\" routerLinkActive #rla1=\\\"routerLinkActive\\\"\\r\\n    [active]=\\\"rla1.isActive\\\" >\\r\\n    \\r\\n        Student List\\r\\n       </a>\\r\\n  </nav>\\r\\n  \\r\\n  <router-outlet></router-outlet>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-on-boarding-header',\n  templateUrl: './on-boarding-header.component.html',\n  styleUrls: ['./on-boarding-header.component.css']\n})\nexport class OnboardingHeaderComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigateByUrl('/login');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29uLWJvYXJkL29uLWJvYXJkaW5nL29uLWJvYXJkaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-on-boarding-header></app-on-boarding-header>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-on-boarding',\n  templateUrl: './on-boarding.component.html',\n  styleUrls: ['./on-boarding.component.css']\n})\nexport class OnboardingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29uLWJvYXJkL3N0dWRlbnQtZGV0YWlsL3N0dWRlbnQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card-header>\\n      <mat-card-title>{{ student.studentName }}</mat-card-title>\\n    </mat-card-header>\\n  \\n    <mat-card-actions>\\n      <button mat-button (click)=\\\"openDialoginEditMode(student)\\\" >Edit</button>\\n      <button mat-button (click)=\\\"openDialoginViewMode(student)\\\" >View</button>\\n      <button mat-button (click)=\\\"deleteStudent(student.id)\\\">Delete</button>\\n    </mat-card-actions>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { IStudent } from '../../shared/student'\nimport { StudentService } from '../../shared/student.service';\nimport { MatDialog } from '@angular/material';\nimport { OnboardingFormComponent } from '../on-boarding-form/on-boarding-form.component';\nimport { Router } from '@angular/router';\nimport { ConfirmationDialog } from '../confirmation-dialog/confirmation-dialog.component';\n@Component({\n  selector: 'app-student-detail',\n  templateUrl: './student-detail.component.html',\n  styleUrls: ['./student-detail.component.css']\n})\nexport class StudentDetailComponent implements OnInit {\n  @Input() student: IStudent[] = [];\n  constructor(private router: Router, private dialog: MatDialog, private studentService: StudentService) { }\n\n  ngOnInit() {\n\n  }\n  openDialoginEditMode(student: IStudent): void {\n    this.studentService.sendStudentDataForEdit({ 'student': student, 'disabled': false });\n    this.router.navigateByUrl('onBoard/form');\n    // console.log(student);\n    // const dialogRef = this.dialog.open(OnboardingFormComponent, {\n    //   height: '800px',\n    //   width: '600px',\n    //   data: {student:student}\n    // });\n  }\n  openDialoginViewMode(student: IStudent): void {\n    this.studentService.sendStudentDataForEdit({ 'student': student, 'disabled': true });\n    this.router.navigateByUrl('onBoard/form');\n  }\n  deleteStudent(id: number): void {\n    const dialogRef = this.dialog.open(ConfirmationDialog, {\n      width: '350px',\n      data: { message: 'Are you sure you want to delete this?' }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == true) {\n        console.log(result);\n        this.studentService.deleteStudent(id).subscribe(value => {\n          this.studentService.sendStudentData();\n        });\n      }\n    });\n\n\n  }\n\n}\n","module.exports = \".international-student{\\r\\n    background-color: bisque;\\r\\n}\\r\\n.domestic-student{\\r\\n    background-color: rosybrown;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb24tYm9hcmQvc3R1ZGVudC1saXN0L3N0dWRlbnQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksd0JBQXdCO0FBQzVCO0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0IiLCJmaWxlIjoic3JjL2FwcC9vbi1ib2FyZC9zdHVkZW50LWxpc3Qvc3R1ZGVudC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW50ZXJuYXRpb25hbC1zdHVkZW50e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmlzcXVlO1xyXG59XHJcbi5kb21lc3RpYy1zdHVkZW50e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcm9zeWJyb3duO1xyXG59Il19 */\"","module.exports = \"<mat-form-field>\\n  <mat-label>Student Category</mat-label>\\n  <select (change)=\\\"selectStudentBasedOnCategory($event.target.value)\\\" matNativeControl required>\\n    <option value=\\\"All\\\">All</option>\\n    <option value=\\\"Domestic\\\">Domestic</option>\\n    <option value=\\\"International\\\">International</option>\\n  </select>\\n</mat-form-field>\\n<input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"enter search term here\\\">\\n<div *ngFor=\\\"let student of students | filter : searchText\\\">\\n  <mat-card [ngClass]=\\\"{'domestic-student': student.category=='Domestic', 'international-student': student.category=='International'}\\\"\\n    class=\\\"example-card\\\">\\n    <app-student-detail [student]='student'></app-student-detail>\\n  </mat-card>\\n</div>\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { IStudent } from 'src/app/shared/student';\nimport { StudentService } from '../../shared/student.service';\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentsListComponent implements OnInit {\n  students: IStudent[] = [];\n  constructor(private studentService: StudentService) {\n    \n  }\n\n\n\n  ngOnInit() {\n    this.studentService.sendStudentData();\n    this.studentService.getStudentData().subscribe(value => {\n      this.students = value;\n    });\n  }\n\n  selectStudentBasedOnCategory(categoryName: string) {\n    if (this.students != null) {\n     this.studentService.getStudentData().subscribe(value=>{\n        this.students=value.filter(function (data) {\n        return data.category == (categoryName=='All'?data.category:categoryName);\n      })\n    });\n  }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    return this.authService.isLoggedIn();\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IUser } from './user';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable ,throwError} from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseUrl: string = 'http://localhost:4200/api/users';\n  constructor(private httpClient: HttpClient) { }\n\n  checkCredentials(userInfo: IUser): Observable<IUser[]> {\n    return this.httpClient.get<IUser[]>(this.baseUrl).pipe(\n      map((user: IUser[]) => user.filter(x => x.email == userInfo.email && x.password == userInfo.password)));\n  }\n\n  public login() {\n    console.log(\"login sucess\");\n    localStorage.setItem('token', \"myToken\");\n  }\n\n  public isLoggedIn() {\n    return localStorage.getItem('token') !== null;\n\n  }\n\n  registerUser(user: IUser): Observable<IUser> {\n    try {\n      this.getNextIdForUser().subscribe(value => {\n        user.id = value;\n      })\n      return this.httpClient.post<IUser>(this.baseUrl, user).pipe(\n        catchError(this.handleError)\n      );\n    } catch (ex) {\n      console.log(ex.message);\n    }\n  }\n  getNextIdForUser(): Observable<number> {\n    return this.getUsers().pipe(\n      map((user: IUser[]) => user.reduce(function (prev, curr) {\n        return (prev.id > curr.id) ? prev : curr;\n      }).id + 1)\n    );\n  }\n  getUsers(): Observable<IUser[]> {\n    return this.httpClient.get<IUser[]>(this.baseUrl).pipe(\n    );\n  }\n\n  public logout() {\n    localStorage.removeItem('token');\n  }\n  private handleError(err: HttpErrorResponse) {\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { IStudent } from './student';\r\nimport { IUser } from './user';\r\n\r\nexport class Data implements InMemoryDbService {\r\n    createDb() {\r\n        const users: IUser[] = [{\r\n            'id':1,\r\n            'email': 'admin@nagarro.com',\r\n            'password': 'Passw0rd'\r\n        },\r\n        {\r\n            'id':2,\r\n            'email': 'admin2@nagarro.com',\r\n            'password': 'Passw0rd2'\r\n        }\r\n        ];\r\n        const students: IStudent[] = [{\r\n            'id': 1,\r\n            'studentName': 'John snow',\r\n            'category': 'International',\r\n            'documents': {\r\n                'domicile': true,\r\n                'birthCertificate': true,\r\n                'markSheets': true,\r\n                'policeClearance': true,\r\n                'passport': true,\r\n                'declaration': true\r\n            },\r\n            'dob': new Date('04/04/1995'),\r\n            'fatherName': 'Michael',\r\n            'motherName': 'Lizzie',\r\n            'lastClassScore': 97\r\n\r\n        },\r\n        {\r\n            'id': 2,\r\n            'studentName': 'Neena',\r\n            'category': 'Domestic',\r\n            'documents': {\r\n                'domicile': true,\r\n                'birthCertificate': true,\r\n                'markSheets': true,\r\n                'policeClearance': true,\r\n                'passport': true,\r\n                'declaration': true\r\n            },\r\n            'dob': new Date('04/04/1995'),\r\n            'fatherName': 'Michael',\r\n            'motherName': 'Lizzie',\r\n            'lastClassScore': 97\r\n\r\n        }\r\n        ];\r\n        return {\r\n            students: students,\r\n            users: users\r\n        };\r\n    }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IStudent } from './student';\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n    transform(items: IStudent[], searchText: string): any[] {\r\n        console.log(searchText);\r\n        if (!items) return [];\r\n        if (!searchText) return items;\r\n        searchText = searchText.toLowerCase();\r\n        return items.filter(it => {\r\n            return it.studentName.toLowerCase().includes(searchText);\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\nimport { catchError, tap, map, filter } from 'rxjs/operators';\nimport { IStudent } from './student';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private baseUrl: string = 'http://localhost:4200/api/students';\n  private studentData$ = new BehaviorSubject<IStudent[]>(null);\n  private StudentDataForEdit$ = new BehaviorSubject(null);\n\n  getStudentDataForEdit(){\n    return this.StudentDataForEdit$.asObservable();\n  }\n  sendStudentDataForEdit(value) {\n    this.StudentDataForEdit$.next(value);\n  }\n  constructor(private httpClient: HttpClient) { }\n\n  getStudent(id: number): Observable<IStudent> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.get<IStudent>(url).pipe(\n      catchError(this.handleError)\n    );\n  }\n  getStudentData() {\n    return this.studentData$.asObservable();\n  }\n  sendStudentData() {\n    let data = this.httpClient.get<IStudent[]>(this.baseUrl).subscribe(\n      value => {\n        this.studentData$.next(value);\n      }\n    );\n  }\n  getStudents(): Observable<IStudent[]> {\n    return this.httpClient.get<IStudent[]>(this.baseUrl).pipe(\n      catchError(this.handleError)\n    );\n  }\n  getNextIdForStudent(): Observable<number> {\n    return this.getStudents().pipe(\n      map((students: IStudent[]) => students.reduce(function (prev, curr) {\n        return (prev.id > curr.id) ? prev : curr;\n      }).id + 1)\n    );\n  }\n  addStudent(student: IStudent): Observable<IStudent> {\n    try {\n      console.log(student);\n      return this.httpClient.post<IStudent>(this.baseUrl, student).pipe(\n        catchError(this.handleError));\n    } catch (ex) {\n      console.log(ex.message);\n    }\n  }\n  deleteStudent(id: number): Observable<IStudent> {\n    try {\n      const url = `${this.baseUrl}/${id}`;\n      return this.httpClient.delete<IStudent>(url).pipe(\n\n        catchError(this.handleError));\n    } catch (ex) {\n      console.log(ex.message);\n    }\n  }\n  updateStudent(student: IStudent): Observable<IStudent> {\n    try {\n      \n      console.log(\"edit\");\n      console.log(student);\n      const url = `${this.baseUrl}/${student.id}`;\n      return this.httpClient.put<IStudent>(url, student).pipe(\n        catchError(this.handleError));\n    } catch (ex) {\n      console.log(ex.message);\n    }\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}